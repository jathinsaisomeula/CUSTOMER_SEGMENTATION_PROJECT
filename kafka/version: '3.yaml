version: '3.8'


services:
 zookeeper:
   image: confluentinc/cp-zookeeper:7.5.3
   hostname: zookeeper
   container_name: zookeeper
   ports:
     - "2181:2181"
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000
   volumes:
     - zookeeper_data:/var/lib/zookeeper/data
     - zookeeper_log:/var/lib/zookeeper/log


 kafka:
   image: confluentinc/cp-kafka:7.5.3
   hostname: kafka
   container_name: kafka
   ports:
     - "9093:9093" # Exposes Kafka broker to your host (localhost:9093)
   depends_on:
     - zookeeper
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_LISTENERS: CLIENT://0.0.0.0:9093,INTERNAL://0.0.0.0:29092
     KAFKA_ADVERTISED_LISTENERS: CLIENT://host.docker.internal:9093,INTERNAL://kafka:29092
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT
     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
   volumes:
     - kafka_data:/var/lib/kafka/data


 python-app:
   build: . # Builds the image from the Dockerfile in the current directory
   hostname: python-app
   container_name: jathinmarktsalesdata-python-app # Unique container name for clarity
   volumes:
     - .:/app # Mounts your current project directory into /app inside the container
   command: sleep infinity # Keeps the container running so you can exec into it
   depends_on:
     - kafka # Ensures Kafka is up before this app starts
   environment:
     KAFKA_BROKER: kafka:29092 # Environment variable for Python apps to connect to Kafka


volumes:
 zookeeper_data:
 zookeeper_log:
 kafka_data:
